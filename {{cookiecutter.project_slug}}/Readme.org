#+title: Data project for {{ cookiecutter.project_name }}

- Version: "{{ cookiecutter.version }}"

* To download data

#+begin_src sh :results output :exports both
rclone --drive-shared-with-me sync --copy-links --progress --exclude *.lifext gdpa:iClima\ 1Photon data/
#+end_src

* Initial project setup

- [ ] Create a new (empty) repo https://gin.g-node.org/repo/create
- [ ] Run `git init`
- [ ] Run `git add .`
- [ ] Run `git remote add origin git@gin.g-node.org:/darosio/{{ cookiecutter.project_name }}.git`
- [ ] Run `git commit -m "init"`
- [ ] Run `git push --set-upstream origin main`
- [ ] Run `git annex init $HOSTNAME`
- [ ] Run `git config annex.sshcaching true`
- [ ] Edit .gitignore
- [ ] Run `git annex add data/`
- [ ] Run `git annex sync`
- Alternatively use `echo "layout pyenv" or "layout python" > .envrc`
- [ ] Run `direnv allow`
- [ ] Run `hatch env create`
- [ ] Run `hatch run lint`
- [ ] Run `hatch run init`


** Use 
`git annex sync` instead of pushing after committing notable changes.

** CLI installation

To enable auto completion for the `cli` command, follow these steps:

1.  Generate the completion script by running the following command:
   
#+begin_src sh :results output :exports both
_{{ cookiecutter.cliname.upper() }}_COMPLETE=bash_source {{ cookiecutter.cliname }} > ~/.local/bin/{{ cookiecutter.cliname }}-complete.bash
#+end_src

2.  Source the generated completion script to enable auto completion:
   
#+begin_src sh :results output :exports both
source ~/.local/bin/{{ cookiecutter.cliname }}-complete.bash
#+end_src



